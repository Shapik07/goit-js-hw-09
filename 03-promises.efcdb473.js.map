{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAkCC,GAChCA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAcF,MAAMG,OACzC,MAAMC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAE7C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,GAMzD,SAAuBA,EAAUN,GAC/B,MAAMO,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEL,E,MAAUN,IAEpBY,EAAO,C,SAAEN,E,MAAUN,MAEpBA,OAKLc,CApBsBR,EAAUN,GAqB7Be,MAAK,EAACT,SAAEA,EAAQN,MAAEA,MACjBR,EAAAwB,OAAOC,QAAQ,uBAAqBX,QAAiBN,UAEtDkB,OAAM,EAACZ,SAAEA,EAAQN,MAAEA,MAClBR,EAAAwB,OAAOC,QAAQ,sBAAoBX,QAAeN,UAxBpDA,GAASI","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', clickOnBtnCreatePromises);\n\nfunction clickOnBtnCreatePromises(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    checkCreatedPromise(position, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction checkCreatedPromise(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.success(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","form","document","querySelector","addEventListener","e","preventDefault","delay","Number","currentTarget","value","step","amount","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise","then","Notify","success","catch"],"version":3,"file":"03-promises.efcdb473.js.map"}